name: Deploy Spring Boot to EC2 (Ubuntu)  # Nombre del workflow

on:
  push:                                 # Workflow activa cuando se hace push.
    branches:
      - master                            # Solo se ejecuta si push en rama main

jobs:
  build-and-deploy:                     # Define trabajo llamado buildanddeploy
    runs-on: ubuntu-latest              # El trabajo se ejecuta en Ubuntu
    env:
      DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Maven settings-security.xml
        run: |
          mkdir -p ~/.m2
          echo "${{ secrets.MAVEN_SECURITY_SETTINGS }}" > ~/.m2/settings-security.xml

      - name: Set up Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "${{ secrets.MAVEN_SETTINGS }}" > ~/.m2/settings.xml

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Maven tests
        run: mvn clean test

      # 1️⃣ Descargar el código fuente del repositorio
      - name: Checkout source code       # Nombre del paso.
        uses: actions/checkout@v2        # Clonar el repositorio.

      # 2️⃣ Configurar JDK 21 (Java Development Kit)
      - name: Set up JDK 21             # Nombre del paso.
        uses: actions/setup-java@v2     # Configurar el entorno Java.
        with:
          java-version: 21              # Especifica la versión de Java (21).
          distribution: temurin         # Utiliza dist OpenJDK llamada Temurin.


      # 3️⃣ Construir la aplicación usando Maven
      - name: Build with Maven          # Nombre del paso.
        run: mvn -X clean package          # Construir proyecto, generando .war.

      - name: Listar contenido de target
        run: ls -lh target/

      # 4️⃣ Copiar el archivo .war a la instancia EC2
      - name: Copy .war to EC2          # Nombre del paso.
        uses: appleboy/scp-action@v0.1.5  # Copiar archivos a servidor remoto
        with:
          host: ${{ secrets.EC2_HOST }}    # Dirección IP de la instancia EC2
          username: ${{ secrets.EC2_USERNAME }}  # Nombre usuario EC2
          key: ${{ secrets.EC2_PRIVATE_KEY }}    # Clave privada SSH
          source: target/turnify-0.0.1-SNAPSHOT.war  # Ruta del archivo .war
          target: /home/ubuntu/                   # Carpeta destino en EC2
          strip_components: 1                     # Elimina directorios

      # 5️⃣ Mover el archivo .war a la carpeta webapps de Tomcat y configurar permisos
      - name: Move .war to Tomcat directory and set permissions
        uses: appleboy/ssh-action@master        # Acción ssh-action
        with:
          host: ${{ secrets.EC2_HOST }}         # Dirección IP de EC2
          username: ${{ secrets.EC2_USERNAME }} # Nombre de usuario de EC2
          key: ${{ secrets.EC2_PRIVATE_KEY }}   # Clave privada SSH
          script: |
            sudo rm -r /var/lib/tomcat10/webapps/turnify.war
            sudo rm -r /var/lib/tomcat10/webapps/turnify
            sudo mv /home/ubuntu/turnify-0.0.1-SNAPSHOT.war /var/lib/tomcat10/webapps/turnify.war  
            sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/turnify.war  
            sudo chmod 755 /var/lib/tomcat10/webapps/turnify.war
            sudo chmod 755 /var/lib/tomcat10/webapps/turnify 
            echo "export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" | sudo tee -a /etc/default/tomcat10
            echo "export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" | sudo tee -a /etc/environment
            echo "export DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}" | sudo tee -a /etc/default/tomcat10
            echo "export DB_USERNAME=${{ secrets.DB_USERNAME }}" | sudo tee -a /etc/default/tomcat10
            echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee -a /etc/default/tomcat10
            echo "export DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}" | sudo tee -a /etc/environment
            echo "export DB_USERNAME=${{ secrets.DB_USERNAME }}" | sudo tee -a /etc/environment
            echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee -a /etc/environment
            sudo systemctl restart tomcat10