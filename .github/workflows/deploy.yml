name: Deploy Spring Boot to EC2 (Ubuntu)  # Nombre del workflow

on:
  push:                                 # Workflow activa cuando se hace push.
    branches:
      - master                            # Solo se ejecuta si push en rama main

jobs:
  deploy:
    name: Build and Deploy WAR to EC2
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Descargar el código fuente del repositorio
      - name: Checkout source code       # Nombre del paso.
        uses: actions/checkout@v3        # Clonar el repositorio.

      # 2️⃣ Configurar JDK 21 (Java Development Kit)
      - name: Set up JDK 21             # Nombre del paso.
        uses: actions/setup-java@v3     # Configurar el entorno Java.
        with:
          java-version: 21              # Especifica la versión de Java (21).
          distribution: temurin         # Utiliza dist OpenJDK llamada Temurin.
      - name: Set environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV


      # 3️⃣ Construir la aplicación usando Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Verify WAR file existence
        run: |
          ls -l target

      # 4️⃣ Copiar el archivo .war a la instancia EC2
      - name: Upload WAR to EC2          # Nombre del paso.
        uses: appleboy/scp-action@v0.1.5  # Copiar archivos a servidor remoto
        with:
          host: ${{ secrets.EC2_HOST }}    # Dirección IP de la instancia EC2
          username: ${{ secrets.EC2_USERNAME }}  # Nombre usuario EC2
          key: ${{ secrets.EC2_PRIVATE_KEY }} # Clave privada SSH
          port: 22
          source: target/ProyectoFinalGS-0.0.1-SNAPSHOT.war  # Ruta del archivo .war
          target: /home/${{ secrets.EC2_USER }}/                   # Carpeta destino en EC2
          strip_components: 1                     # Elimina directorios

      # 5️⃣ Mover el archivo .war a la carpeta webapps de Tomcat y configurar permisos
      - name: Move WAR to Tomcat and cleanup old ROOT
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            sudo rm -r /var/lib/tomcat10/webapps/ROOT.war
            sudo rm -r /var/lib/tomcat10/webapps/ROOT
            sudo mv /home/ubuntu/ProyectoFinalGS-0.0.1-SNAPSHOT.war /var/lib/tomcat10/webapps/ROOT.war  
            sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/ROOT.war  
            sudo chmod 755 /var/lib/tomcat10/webapps/ROOT.war 
            echo 'export SPRING_MAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}"' | sudo tee -a /etc/default/tomcat10
            echo 'SPRING_MAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}"' | sudo tee -a /etc/environment
            echo 'export SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}"' | sudo tee -a /etc/default/tomcat10
            echo 'export SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}"' | sudo tee -a /etc/default/tomcat10
            echo 'export SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}"' | sudo tee -a /etc/default/tomcat10
            echo 'SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}"' | sudo tee -a /etc/environment
            echo 'SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}"' | sudo tee -a /etc/environment
            echo 'SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}"' | sudo tee -a /etc/environment
            sudo systemctl restart tomcat10
